package models

import (
	"fmt"
	"github.com/main_projects/bbot/epic_battle/pkg/config"
	"github.com/main_projects/bbot/epic_battle/pkg/errors"
	"github.com/main_projects/bbot/epic_battle/pkg/logger"
)

type Battle struct {
	Hero   *Hero
	Dragon *Dragon
	Round  int
	config config.GameConfig
}

func NewBattle(hero *Hero, dragon *Dragon, cfg config.GameConfig) (*Battle, error) {
	// –í–∞–ª—ñ–¥—É—î–º–æ –≤—Ö—ñ–¥–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
	if hero == nil {
		return nil, fmt.Errorf("–≥–µ—Ä–æ–π –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ nil")
	}
	if dragon == nil {
		return nil, fmt.Errorf("–¥—Ä–∞–∫–æ–Ω –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ nil")
	}

	// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ —É–º–æ–≤–∏
	if dragon.Heads <= 0 {
		return nil, fmt.Errorf("–¥—Ä–∞–∫–æ–Ω –Ω–µ –º–æ–∂–µ –º–∞—Ç–∏ %d –≥–æ–ª—ñ–≤", dragon.Heads)
	}
	if dragon.Heads >= cfg.MaxDragonHeads {
		return nil, fmt.Errorf("–¥—Ä–∞–∫–æ–Ω –Ω–µ –º–æ–∂–µ –º–∞—Ç–∏ –±—ñ–ª—å—à–µ %d –≥–æ–ª—ñ–≤", cfg.MaxDragonHeads)
	}

	return &Battle{
		Hero:   hero,
		Dragon: dragon,
		Round:  0,
		config: cfg,
	}, nil
}

func (b *Battle) ExecuteRound() error {
	logger.Info("–ü–æ—á–∞—Ç–æ–∫ —Ä–∞—É–Ω–¥—É", logger.Fields{
		"round":        b.Round,
		"dragon_heads": b.Dragon.Heads,
		"hero":         b.Hero.Name,
	})
	b.Round++
	fmt.Printf("\nüó°Ô∏è –†–∞—É–Ω–¥ %d: %s –≥–æ—Ç—É—î—Ç—å—Å—è –¥–æ –∞—Ç–∞–∫–∏...\n", b.Round, b.Hero.Name)

	// –ó–º—ñ–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∑–¥—ñ–±–Ω–æ—Å—Ç—ñ
	ability := b.Dragon.UseAbilities(b.Hero)
	if ability.Used {
		fmt.Printf("%s\n", ability.Description)
		fmt.Printf("‚ö° %s\n", ability.Effect)
	}

	// –ì–µ—Ä–æ–π –∞—Ç–∞–∫—É—î
	attack := b.Hero.Attack()
	if attack.HeadsCut > 0 {
		if attack.Type != NormalAttack {
			fmt.Printf("‚öîÔ∏è %s –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î %s!\n", b.Hero.Name, attack.Description)
		}
		fmt.Printf("üí• –ë–ê–ú! %s –≤—ñ–¥—Ä—É–±–∞–≤ %d –≥–æ–ª—ñ–≤ –∑–º—ñ—è!\n", b.Hero.Name, attack.HeadsCut)
	}

	b.Dragon.Heads -= attack.HeadsCut

	if b.Dragon.Heads <= 0 {
		return errors.NewHeroVictoryError()
	}

	if b.Dragon.Heads == b.config.DragonPhobiaNumber {
		return errors.NewDragonPhobiaError()
	}

	// –†–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤–æ–≥–Ω—è–Ω–æ–≥–æ –ø–æ–¥–∏—Ö—É
	regeneratedHeads := b.Dragon.RegenerateHeads(attack.HeadsCut, b.Dragon.Firebreath.Used)

	if regeneratedHeads > 0 {
		b.Dragon.Heads += regeneratedHeads
		if b.Dragon.Firebreath.Used {
			fmt.Printf("üî• –í–æ–≥–Ω—è–Ω–∏–π –ø–æ–¥–∏—Ö –ø–æ–¥–≤–æ—é—î —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—é!\n")
		}
		fmt.Printf("üêâ –û—Ö –Ω—ñ! –£ –∑–º—ñ—è –≤—ñ–¥—Ä–æ—Å–ª–æ %d –≥–æ–ª—ñ–≤!\n", regeneratedHeads)
		fmt.Printf("üò± –¢–µ–ø–µ—Ä —É –∑–º—ñ—è %d –≥–æ–ª—ñ–≤!\n", b.Dragon.Heads)
	} else {
		fmt.Printf("üòé –ì–æ–ª–æ–≤–∏ –Ω–µ –≤—ñ–¥—Ä–æ—Å–ª–∏! –£ –∑–º—ñ—è –∑–∞–ª–∏—à–∏–ª–æ—Å—å %d –≥–æ–ª—ñ–≤.\n", b.Dragon.Heads)
	}

	if b.Dragon.Heads >= b.config.MaxDragonHeads {
		return errors.NewDragonVictoryError()
	}

	return nil
}
